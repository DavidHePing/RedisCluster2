version: '3.7'

networks:
  myNetWork:
    driver: overlay
    external: true

services:
  redis-node1:
    image: "$ImageName"
    networks:
      - myNetWork
    ports:
      - "7001:6379"
      - "17001:16379"
    entrypoint: [redis-server, /etc/redis/rediscluster.conf,--cluster-announce-port,"7001",--cluster-announce-bus-port,"17001",--cluster-announce-ip,"$Ip"]
    deploy:
      # container count
      replicas: 1
      update_config:
        # update container count in once time
        parallelism: 1 
        order: start-first
        failure_action: rollback
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 30s
  redis-node2:
    image: "$ImageName"
    networks:
      - myNetWork
    ports:
      - "7002:6379"
      - "17002:16379"
    entrypoint: [redis-server, /etc/redis/rediscluster.conf,--cluster-announce-port,"7002",--cluster-announce-bus-port,"17002",--cluster-announce-ip,"$Ip"]
    deploy:
      # container count
      replicas: 1
      update_config:
        # update container count in once time
        parallelism: 1 
        order: start-first
        failure_action: rollback
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 30s
  redis-node3:
    image: "$ImageName"
    networks:
      - myNetWork
    ports:
      - "7003:6379"
      - "17003:16379"
    entrypoint: [redis-server, /etc/redis/rediscluster.conf,--cluster-announce-port,"7003",--cluster-announce-bus-port,"17003",--cluster-announce-ip,"$Ip"]
    deploy:
      # container count
      replicas: 1
      update_config:
        # update container count in once time
        parallelism: 1 
        order: start-first
        failure_action: rollback
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 30s
  redis-node4:
    image: "$ImageName"
    networks:
      - myNetWork
    ports:
      - "7004:6379"
      - "17004:16379"
    entrypoint: [redis-server, /etc/redis/rediscluster.conf,--cluster-announce-port,"7004",--cluster-announce-bus-port,"17004",--cluster-announce-ip,"$Ip"]
    deploy:
      # container count
      replicas: 1
      update_config:
        # update container count in once time
        parallelism: 1 
        order: start-first
        failure_action: rollback
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 30s
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
  redis-node5:
    image: "$ImageName"
    networks:
      - myNetWork
    ports:
      - "7005:6379"
      - "17005:16379"   
    entrypoint: [redis-server, /etc/redis/rediscluster.conf,--cluster-announce-port,"7005",--cluster-announce-bus-port,"17005",--cluster-announce-ip,"$Ip"]
    deploy:
      # container count
      replicas: 1
      update_config:
        # update container count in once time
        parallelism: 1 
        order: start-first
        failure_action: rollback
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 30s
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3 
  redis-node6:
    image: "$ImageName"
    networks:
      - myNetWork
    ports:
      - "7006:6379"
      - "17006:16379"   
    entrypoint: [redis-server, /etc/redis/rediscluster.conf, --cluster-announce-port,"7006",--cluster-announce-bus-port,"17006",--cluster-announce-ip,"$Ip"]    
    deploy:
      # container count
      replicas: 1
      update_config:
        # update container count in once time
        parallelism: 1 
        order: start-first
        failure_action: rollback
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 30s
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
  # redis-cluster-creator:
  #   image: redis    
  #   entrypoint: [/bin/sh,-c,'echo "yes" | redis-cli --cluster create "$Ip":7001 "$Ip":7002 "$Ip":7003 "$Ip":7004 "$Ip":7005 "$Ip":7006 --cluster-replicas 1']
  #   deploy:
  #     # container count
  #     replicas: 1
  #     update_config:
  #       # update container count in once time
  #       parallelism: 1 
  #       order: start-first
  #       failure_action: rollback
  #       delay: 10s
  #     restart_policy:
  #       condition: any
  #       delay: 5s
  #       max_attempts: 3
  #       window: 30s
  #   depends_on:
  #     - redis-node1
  #     - redis-node2
  #     - redis-node3
  #     - redis-node4
  #     - redis-node5
  #     - redis-node6